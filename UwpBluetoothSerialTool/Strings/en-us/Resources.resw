<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDisplayName" xml:space="preserve">
    <value>Bluetooth Serial Tool</value>
    <comment>Application display name</comment>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>Bluetooth Serial Tool</value>
    <comment>Application description</comment>
  </data>
  <data name="Main_Title.Text" xml:space="preserve">
    <value>Communicate with your Bluetooth Serial Device</value>
    <comment>Page title for MainPage</comment>
  </data>
  <data name="ExceptionSettingsStorageExtensionsFileNameIsNullOrEmpty" xml:space="preserve">
    <value>File name is null or empty. Specify a valid file name</value>
    <comment>File name is null or empty to save file in settings storage extensions</comment>
  </data>
  <data name="Settings_Theme.Text" xml:space="preserve">
    <value>Choose Theme</value>
    <comment>Choose theme text for Settings</comment>
  </data>
  <data name="Settings_Theme_Dark.Content" xml:space="preserve">
    <value>Dark</value>
    <comment>Dark theme text for Settings</comment>
  </data>
  <data name="Settings_Theme_Default.Content" xml:space="preserve">
    <value>Windows default</value>
    <comment>Windows default theme text for Settings</comment>
  </data>
  <data name="Settings_Theme_Light.Content" xml:space="preserve">
    <value>Light</value>
    <comment>Light theme text for Settings</comment>
  </data>
  <data name="Settings_About.Text" xml:space="preserve">
    <value>About this application</value>
    <comment>About this application title for Settings</comment>
  </data>
  <data name="Settings_AboutDescription.Text" xml:space="preserve">
    <value>This application lets you communicate with your Bluetooth Serial device.</value>
    <comment>About this application description for Settings</comment>
  </data>
  <data name="Settings_PrivacyTermsLink.Content" xml:space="preserve">
    <value>Privacy Statement</value>
    <comment>Privacy Statement link content for Settings</comment>
  </data>
  <data name="Settings_PrivacyTermsLink.NavigateUri" xml:space="preserve">
    <value>https://YourPrivacyUrlGoesHere/</value>
    <comment>Here is your Privacy Statement url for Settings</comment>
  </data>
  <data name="Settings_Personalization.Text" xml:space="preserve">
    <value>Personalization</value>
    <comment>Personalization text for Settings</comment>
  </data>
  <data name="ExceptionEnumToBooleanConverterValueMustBeAnEnum" xml:space="preserve">
    <value>value must be an Enum!</value>
    <comment>Value must be an Enum in enum to boolean converter</comment>
  </data>
  <data name="ExceptionEnumToBooleanConverterParameterMustBeAnEnumName" xml:space="preserve">
    <value>parameter must be an Enum name!</value>
    <comment>Parameter must be an Enum name in enum to boolean converter</comment>
  </data>
  <data name="Settings_Title.Text" xml:space="preserve">
    <value>Settings</value>
    <comment>Page title for SettingsPage</comment>
  </data>
  <data name="FirstRun_Body.Text" xml:space="preserve">
    <value>This application lets you communicate with your Bluetooth Serial device. You can:

- Connect to a paired Bluetooth Serial device
- Listen for incoming Bluetooth Serial connections
- Send text or binary
- Pick a line ending for text
- Receive text or binary
- Run multiple instances of the application to communicate with other devices
- See source code and report issues at https://github.com/tewarid/uwp-bluetooth-serial-tool</value>
    <comment>First use prompt message body</comment>
  </data>
  <data name="FirstRunDialog.Title" xml:space="preserve">
    <value>Welcome</value>
    <comment>First use prompt message title</comment>
  </data>
  <data name="FirstRunDialog.PrimaryButtonText" xml:space="preserve">
    <value>Ok</value>
    <comment>First use prompt message primary button text</comment>
  </data>
  <data name="WhatsNew_Body.Text" xml:space="preserve">
    <value>- Listen for incoming Bluetooth Serial connections
- Bug fixes and minor improvements</value>
    <comment>What's new prompt message body</comment>
  </data>
  <data name="WhatsNewDialog.Title" xml:space="preserve">
    <value>What's new in this version</value>
    <comment>What's new prompt message title</comment>
  </data>
  <data name="WhatsNewDialog.PrimaryButtonText" xml:space="preserve">
    <value>Ok</value>
    <comment>What's new prompt message primary button text</comment>
  </data>
  <data name="Main_ConnectButton.Content" xml:space="preserve">
    <value>Connect</value>
    <comment>ConnectButton text</comment>
  </data>
  <data name="Main_MessagesListViewTitle.Text" xml:space="preserve">
    <value>Messages</value>
    <comment>MessagesListView title </comment>
  </data>
  <data name="Main_DevicesComboBox.Header" xml:space="preserve">
    <value>Paired Bluetooth Serial Devices</value>
    <comment>Header Devices ComboBox</comment>
  </data>
  <data name="Main_DevicesComboBox.PlaceholderText" xml:space="preserve">
    <value>Pick a paired Bluetooth Serial Device</value>
    <comment>PlaceholderText of Devices ComboBox</comment>
  </data>
  <data name="Main_DisconnectButton.Content" xml:space="preserve">
    <value>Disconnect</value>
    <comment>DisconnectButton text</comment>
  </data>
  <data name="Main_EndOfLineDos.Content" xml:space="preserve">
    <value>DOS (Carriage return-Newline)</value>
    <comment>DOS (Carriage return-Newline)</comment>
  </data>
  <data name="Main_EndOfLineMacOs.Content" xml:space="preserve">
    <value>macOS (Carriage return)</value>
    <comment>macOS (Carriage return)</comment>
  </data>
  <data name="Main_EndOfLineUnix.Content" xml:space="preserve">
    <value>Unix (Newline)</value>
    <comment>Unix (Newline)</comment>
  </data>
  <data name="Main_PickEndOfLIne.Text" xml:space="preserve">
    <value>Pick end of line</value>
    <comment>Pick end of line title</comment>
  </data>
  <data name="Main_RefreshButton.Content" xml:space="preserve">
    <value>Refresh</value>
    <comment>RefreshButton text</comment>
  </data>
  <data name="Main_SendButton.Content" xml:space="preserve">
    <value>Send</value>
    <comment>SendButton text</comment>
  </data>
  <data name="Main_SendTextBoxContainsHex.Content" xml:space="preserve">
    <value>Convert hexadecimal to binary</value>
    <comment>SendTextBoxContainsHex CheckBox text</comment>
  </data>
  <data name="Main_SendTextBoxTitle.Text" xml:space="preserve">
    <value>Send message</value>
    <comment>SendTextBox title</comment>
  </data>
  <data name="Main_DeviceNotAvailableContentDialog.CloseButtonText" xml:space="preserve">
    <value>Ok</value>
    <comment>Ok</comment>
  </data>
  <data name="Main_DeviceNotAvailableContentDialog.Content" xml:space="preserve">
    <value>Check that the device is available and not in use.</value>
    <comment>Check that the device is available and not in use.</comment>
  </data>
  <data name="Main_DeviceNotAvailableContentDialog.Title" xml:space="preserve">
    <value>Could not connect to device</value>
    <comment>Could not connect to device</comment>
  </data>
  <data name="Main_InvalidHexContentDialog.CloseButtonText" xml:space="preserve">
    <value>Ok</value>
    <comment>Ok</comment>
  </data>
  <data name="Main_InvalidHexContentDialog.Content" xml:space="preserve">
    <value>Check that the hexadecimal sequence does not contain invalid characters.</value>
    <comment>Check that the hexadecimal sequence does not contain invalid characters.</comment>
  </data>
  <data name="Main_InvalidHexContentDialog.Title" xml:space="preserve">
    <value>Invalid hexadecimal data</value>
    <comment>Invalid hexadecimal data</comment>
  </data>
  <data name="Main_NoBluetoothContentDialog.CloseButtonText" xml:space="preserve">
    <value>Ok</value>
    <comment>Ok</comment>
  </data>
  <data name="Main_NoBluetoothContentDialog.Content" xml:space="preserve">
    <value>Allow the app to access Bluetooth and try again.</value>
    <comment>Allow the app to access Bluetooth and try again.</comment>
  </data>
  <data name="Main_NoBluetoothContentDialog.Title" xml:space="preserve">
    <value>No Bluetooth access</value>
    <comment>No Bluetooth access</comment>
  </data>
  <data name="Main_NoDeviceSelectedContentDialog.CloseButtonText" xml:space="preserve">
    <value>Ok</value>
    <comment>Ok</comment>
  </data>
  <data name="Main_NoDeviceSelectedContentDialog.Content" xml:space="preserve">
    <value>Pick a paired Bluetooth Serial Device.</value>
    <comment>Pick a paired Bluetooth Serial Device.</comment>
  </data>
  <data name="Main_NoDeviceSelectedContentDialog.Title" xml:space="preserve">
    <value>No Device selected</value>
    <comment>No Device selected</comment>
  </data>
  <data name="Main_SendFailedContentDialog.CloseButtonText" xml:space="preserve">
    <value>Ok</value>
    <comment>Ok</comment>
  </data>
  <data name="Main_SendFailedContentDialog.Content" xml:space="preserve">
    <value>Check that the device is available and not in use.</value>
    <comment>Check that the device is available and not in use.</comment>
  </data>
  <data name="Main_SendFailedContentDialog.Title" xml:space="preserve">
    <value>Could not send data to device</value>
    <comment>Could not send data to device</comment>
  </data>
  <data name="Main_ReadFailedContentDialog.CloseButtonText" xml:space="preserve">
    <value>Ok</value>
    <comment>Ok</comment>
  </data>
  <data name="Main_ReadFailedContentDialog.Content" xml:space="preserve">
    <value>Check that the device is available and not in use.</value>
    <comment>Check that the device is available and not in use.</comment>
  </data>
  <data name="Main_ReadFailedContentDialog.Title" xml:space="preserve">
    <value>Unable to read data from device</value>
    <comment>Unable to read data from device</comment>
  </data>
  <data name="Main_DeleteFlyoutButton.Content" xml:space="preserve">
    <value>Yes, empty my message history</value>
    <comment>DeleteFlyout button text</comment>
  </data>
  <data name="Main_DeleteFlyoutConfirmation.Text" xml:space="preserve">
    <value>All messages will be removed. Do you want to continue?</value>
    <comment>DeleteFlyout confirmation</comment>
  </data>
  <data name="BluetoothAddress" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="DeviceId" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="DeviceName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ProductId" xml:space="preserve">
    <value>Product ID</value>
  </data>
  <data name="VendorId" xml:space="preserve">
    <value>Vendor ID</value>
  </data>
  <data name="Main_ListenToggleButton.Text" xml:space="preserve">
    <value>Listen</value>
  </data>
</root>