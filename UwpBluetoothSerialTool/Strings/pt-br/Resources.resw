<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDisplayName" xml:space="preserve">
    <value>Bluetooth Serial Tool</value>
    <comment>Application display name</comment>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>Bluetooth Serial Tool</value>
    <comment>Application description</comment>
  </data>
  <data name="Main_Title.Text" xml:space="preserve">
    <value>Comunique-se com seu dispositivo serial Bluetooth</value>
    <comment>Page title for MainPage</comment>
  </data>
  <data name="ExceptionSettingsStorageExtensionsFileNameIsNullOrEmpty" xml:space="preserve">
    <value>File name is null or empty. Specify a valid file name</value>
    <comment>File name is null or empty to save file in settings storage extensions</comment>
  </data>
  <data name="Settings_Theme.Text" xml:space="preserve">
    <value>Escolha o Tema</value>
    <comment>Choose theme text for Settings</comment>
  </data>
  <data name="Settings_Theme_Dark.Content" xml:space="preserve">
    <value>Escuro</value>
    <comment>Dark theme text for Settings</comment>
  </data>
  <data name="Settings_Theme_Default.Content" xml:space="preserve">
    <value>Padrão do Windows</value>
    <comment>Windows default theme text for Settings</comment>
  </data>
  <data name="Settings_Theme_Light.Content" xml:space="preserve">
    <value>Claro</value>
    <comment>Light theme text for Settings</comment>
  </data>
  <data name="Settings_About.Text" xml:space="preserve">
    <value>Sobre esta aplicação</value>
    <comment>About this application title for Settings</comment>
  </data>
  <data name="Settings_AboutDescription.Text" xml:space="preserve">
    <value>Este aplicativo permite que você se comunique com o seu dispositivo serial Bluetooth.</value>
    <comment>About this application description for Settings</comment>
  </data>
  <data name="Settings_PrivacyTermsLink.Content" xml:space="preserve">
    <value>Declaração de privacidade</value>
    <comment>Privacy Statement link content for Settings</comment>
  </data>
  <data name="Settings_PrivacyTermsLink.NavigateUri" xml:space="preserve">
    <value>https://YourPrivacyUrlGoesHere/</value>
    <comment>Here is your Privacy Statement url for Settings</comment>
  </data>
  <data name="Settings_Personalization.Text" xml:space="preserve">
    <value>Personalização</value>
    <comment>Personalization text for Settings</comment>
  </data>
  <data name="ExceptionEnumToBooleanConverterValueMustBeAnEnum" xml:space="preserve">
    <value>value must be an Enum!</value>
    <comment>Value must be an Enum in enum to boolean converter</comment>
  </data>
  <data name="ExceptionEnumToBooleanConverterParameterMustBeAnEnumName" xml:space="preserve">
    <value>parameter must be an Enum name!</value>
    <comment>Parameter must be an Enum name in enum to boolean converter</comment>
  </data>
  <data name="Settings_Title.Text" xml:space="preserve">
    <value>Definições</value>
    <comment>Page title for SettingsPage</comment>
  </data>
  <data name="FirstRun_Body.Text" xml:space="preserve">
    <value>Este aplicativo permite que você se comunique com o seu dispositivo serial Bluetooth. Você pode:

- Conectar-se a um dispositivo serial Bluetooth emparelhado
- Enviar texto ou binário
- Escolher um término de linha para o texto
- Receber texto ou binário
- Executar várias instâncias do aplicativo para se comunicar com outros dispositivos
- Consultar o código-fonte e relatar problemas em https://github.com/tewarid/uwp-bluetooth-serial-tool</value>
    <comment>First use prompt message body</comment>
  </data>
  <data name="FirstRunDialog.Title" xml:space="preserve">
    <value>Bem-vinda</value>
    <comment>First use prompt message title</comment>
  </data>
  <data name="FirstRunDialog.PrimaryButtonText" xml:space="preserve">
    <value>Ok</value>
    <comment>First use prompt message primary button text</comment>
  </data>
  <data name="WhatsNew_Body.Text" xml:space="preserve">
    <value>- Suporte para Português Brasileiro
- Novo logotipo</value>
    <comment>What's new prompt message body</comment>
  </data>
  <data name="WhatsNewDialog.Title" xml:space="preserve">
    <value>O que há de novo nesta versão</value>
    <comment>What's new prompt message title</comment>
  </data>
  <data name="WhatsNewDialog.PrimaryButtonText" xml:space="preserve">
    <value>Ok</value>
    <comment>What's new prompt message primary button text</comment>
  </data>
  <data name="Main_ClearButton.Text" xml:space="preserve">
    <value>Limpar</value>
    <comment>ClearButton text</comment>
  </data>
  <data name="Main_ConnectButton.Text" xml:space="preserve">
    <value>Conectar</value>
    <comment>ConnectButton text</comment>
  </data>
  <data name="Main_DataReceivedTextBoxTitle.Text" xml:space="preserve">
    <value>Dados Recebidos</value>
    <comment>DataReceivedTextBox title</comment>
  </data>
  <data name="Main_DevicesComboBox.Header" xml:space="preserve">
    <value>Dispositivos seriais Bluetooth emparelhados</value>
    <comment>Header Devices ComboBox</comment>
  </data>
  <data name="Main_DevicesComboBox.PlaceholderText" xml:space="preserve">
    <value>Escolha um dispositivo serial Bluetooth emparelhado</value>
    <comment>PlaceholderText of Devices ComboBox</comment>
  </data>
  <data name="Main_DisconnectButton.Text" xml:space="preserve">
    <value>Desconectar</value>
    <comment>DisconnectButton text</comment>
  </data>
  <data name="Main_EndOfLineDos.Text" xml:space="preserve">
    <value>DOS (Retorno de carro-Nova Linha)</value>
    <comment>DOS (Carriage return-Newline)</comment>
  </data>
  <data name="Main_EndOfLineMacOs.Text" xml:space="preserve">
    <value>macOS (Retorno de carro)</value>
    <comment>macOS (Carriage return)</comment>
  </data>
  <data name="Main_EndOfLineUnix.Text" xml:space="preserve">
    <value>Unix (Nova linha)</value>
    <comment>Unix (Newline)</comment>
  </data>
  <data name="Main_PickEndOfLIne.Text" xml:space="preserve">
    <value>Escolha o fim da linha</value>
    <comment>Pick end of line title</comment>
  </data>
  <data name="Main_RefreshButton.Text" xml:space="preserve">
    <value>Atualizar</value>
    <comment>RefreshButton text</comment>
  </data>
  <data name="Main_SendButton.Text" xml:space="preserve">
    <value>Enviar</value>
    <comment>SendButton text</comment>
  </data>
  <data name="Main_SendTextBoxContainsHex.Text" xml:space="preserve">
    <value>Converter para binário - o texto está em hexadecimal</value>
    <comment>SendTextBoxContainsHex CheckBox text</comment>
  </data>
  <data name="Main_SendTextBoxTitle.Text" xml:space="preserve">
    <value>Dados a enviar - o texto será enviado como UTF-8</value>
    <comment>SendTextBox title</comment>
  </data>
  <data name="Main_ShowReceivedDataInHex.Text" xml:space="preserve">
    <value>Mostrar dados em hexadecimal</value>
    <comment>Show data in hexadecimal</comment>
  </data>
</root>